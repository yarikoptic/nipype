# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.slicer.diffusion.diffusion import TractographyLabelMapSeeding
def test_TractographyLabelMapSeeding_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    minimumlength=dict(argstr='--minimumlength %f',
    ),
    inputroi=dict(argstr='--inputroi %s',
    ),
    stoppingcurvature=dict(argstr='--stoppingcurvature %f',
    ),
    integrationsteplength=dict(argstr='--integrationsteplength %f',
    ),
    args=dict(argstr='%s',
    ),
    stoppingmode=dict(argstr='--stoppingmode %s',
    ),
    useindexspace=dict(argstr='--useindexspace ',
    ),
    outputdirectory=dict(hash_files=False,
    argstr='--outputdirectory %s',
    ),
    seedspacing=dict(argstr='--seedspacing %f',
    ),
    label=dict(argstr='--label %d',
    ),
    randomgrid=dict(argstr='--randomgrid ',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    clthreshold=dict(argstr='--clthreshold %f',
    ),
    stoppingvalue=dict(argstr='--stoppingvalue %f',
    ),
    InputVolume=dict(position=-2,
    argstr='%s',
    ),
    writetofile=dict(argstr='--writetofile ',
    ),
    maximumlength=dict(argstr='--maximumlength %f',
    ),
    OutputFibers=dict(position=-1,
    hash_files=False,
    argstr='%s',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    name=dict(argstr='--name %s',
    ),
    )
    inputs = TractographyLabelMapSeeding.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_TractographyLabelMapSeeding_outputs():
    output_map = dict(OutputFibers=dict(position=-1,
    ),
    outputdirectory=dict(),
    )
    outputs = TractographyLabelMapSeeding.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

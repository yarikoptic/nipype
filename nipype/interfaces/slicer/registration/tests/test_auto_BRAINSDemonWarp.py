# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.slicer.registration.specialized import BRAINSDemonWarp
def test_BRAINSDemonWarp_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    outputPixelType=dict(argstr='--outputPixelType %s',
    ),
    medianFilterSize=dict(argstr='--medianFilterSize %s',
    sep=',',
    ),
    backgroundFillValue=dict(argstr='--backgroundFillValue %d',
    ),
    upperThresholdForBOBF=dict(argstr='--upperThresholdForBOBF %d',
    ),
    promptUser=dict(argstr='--promptUser ',
    ),
    smoothDisplacementFieldSigma=dict(argstr='--smoothDisplacementFieldSigma %f',
    ),
    histogramMatch=dict(argstr='--histogramMatch ',
    ),
    interpolationMode=dict(argstr='--interpolationMode %s',
    ),
    fixedVolume=dict(argstr='--fixedVolume %s',
    ),
    initializeWithDisplacementField=dict(argstr='--initializeWithDisplacementField %s',
    ),
    numberOfBCHApproximationTerms=dict(argstr='--numberOfBCHApproximationTerms %d',
    ),
    inputPixelType=dict(argstr='--inputPixelType %s',
    ),
    minimumMovingPyramid=dict(argstr='--minimumMovingPyramid %s',
    sep=',',
    ),
    registrationFilterType=dict(argstr='--registrationFilterType %s',
    ),
    upFieldSmoothing=dict(argstr='--upFieldSmoothing %f',
    ),
    initializeWithTransform=dict(argstr='--initializeWithTransform %s',
    ),
    numberOfHistogramBins=dict(argstr='--numberOfHistogramBins %d',
    ),
    minimumFixedPyramid=dict(argstr='--minimumFixedPyramid %s',
    sep=',',
    ),
    outputNormalized=dict(argstr='--outputNormalized ',
    ),
    outputVolume=dict(hash_files=False,
    argstr='--outputVolume %s',
    ),
    outputCheckerboardVolume=dict(hash_files=False,
    argstr='--outputCheckerboardVolume %s',
    ),
    movingVolume=dict(argstr='--movingVolume %s',
    ),
    max_step_length=dict(argstr='--max_step_length %f',
    ),
    fixedBinaryVolume=dict(argstr='--fixedBinaryVolume %s',
    ),
    args=dict(argstr='%s',
    ),
    arrayOfPyramidLevelIterations=dict(argstr='--arrayOfPyramidLevelIterations %s',
    sep=',',
    ),
    numberOfThreads=dict(argstr='--numberOfThreads %d',
    ),
    movingBinaryVolume=dict(argstr='--movingBinaryVolume %s',
    ),
    neighborhoodForBOBF=dict(argstr='--neighborhoodForBOBF %s',
    sep=',',
    ),
    outputDisplacementFieldVolume=dict(hash_files=False,
    argstr='--outputDisplacementFieldVolume %s',
    ),
    checkerboardPatternSubdivisions=dict(argstr='--checkerboardPatternSubdivisions %s',
    sep=',',
    ),
    seedForBOBF=dict(argstr='--seedForBOBF %s',
    sep=',',
    ),
    outputDisplacementFieldPrefix=dict(argstr='--outputDisplacementFieldPrefix %s',
    ),
    numberOfPyramidLevels=dict(argstr='--numberOfPyramidLevels %d',
    ),
    gui=dict(argstr='--gui ',
    ),
    outputDebug=dict(argstr='--outputDebug ',
    ),
    maskProcessingMode=dict(argstr='--maskProcessingMode %s',
    ),
    use_vanilla_dem=dict(argstr='--use_vanilla_dem ',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    lowerThresholdForBOBF=dict(argstr='--lowerThresholdForBOBF %d',
    ),
    numberOfMatchPoints=dict(argstr='--numberOfMatchPoints %d',
    ),
    gradient_type=dict(argstr='--gradient_type %s',
    ),
    )
    inputs = BRAINSDemonWarp.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_BRAINSDemonWarp_outputs():
    output_map = dict(outputVolume=dict(),
    outputCheckerboardVolume=dict(),
    outputDisplacementFieldVolume=dict(),
    )
    outputs = BRAINSDemonWarp.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.fsl.preprocess import MCFLIRT
def test_MCFLIRT_inputs():
    input_map = dict(use_gradient=dict(argstr='-gdt',
    ),
    smooth=dict(argstr='-smooth %.2f',
    ),
    cost=dict(argstr='-cost %s',
    ),
    stats_imgs=dict(argstr='-stats',
    ),
    save_mats=dict(argstr='-mats',
    ),
    use_contour=dict(argstr='-edge',
    ),
    init=dict(argstr='-init %s',
    ),
    in_file=dict(position=0,
    mandatory=True,
    argstr='-in %s',
    ),
    ref_vol=dict(argstr='-refvol %d',
    ),
    interpolation=dict(argstr='-%s_final',
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    save_rms=dict(argstr='-rmsabs -rmsrel',
    ),
    args=dict(argstr='%s',
    ),
    scaling=dict(argstr='-scaling %.2f',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    rotation=dict(argstr='-rotation %d',
    ),
    mean_vol=dict(argstr='-meanvol',
    ),
    out_file=dict(argstr='-out %s',
    hash_files=False,
    genfile=True,
    ),
    save_plots=dict(argstr='-plots',
    ),
    dof=dict(argstr='-dof %d',
    ),
    ref_file=dict(argstr='-reffile %s',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    output_type=dict(),
    stages=dict(argstr='-stages %d',
    ),
    bins=dict(argstr='-bins %d',
    ),
    )
    inputs = MCFLIRT.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_MCFLIRT_outputs():
    output_map = dict(mean_img=dict(),
    std_img=dict(),
    out_file=dict(),
    variance_img=dict(),
    mat_file=dict(),
    par_file=dict(),
    rms_files=dict(),
    )
    outputs = MCFLIRT.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

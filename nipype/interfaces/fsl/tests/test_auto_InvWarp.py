# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.fsl.utils import InvWarp
def test_InvWarp_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    niter=dict(argstr='--niter=%d',
    ),
    regularise=dict(argstr='--regularise=%f',
    ),
    inverse_warp=dict(name_source=['warp'],
    hash_files=False,
    name_template='%s_inverse',
    argstr='--out=%s',
    ),
    reference=dict(mandatory=True,
    argstr='--ref=%s',
    ),
    args=dict(argstr='%s',
    ),
    warp=dict(mandatory=True,
    argstr='--warp=%s',
    ),
    relative=dict(xor=['absolute'],
    argstr='--rel',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    noconstraint=dict(argstr='--noconstraint',
    ),
    output_type=dict(),
    jacobian_max=dict(argstr='--jmax=%f',
    ),
    jacobian_min=dict(argstr='--jmin=%f',
    ),
    absolute=dict(xor=['relative'],
    argstr='--abs',
    ),
    )
    inputs = InvWarp.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_InvWarp_outputs():
    output_map = dict(inverse_warp=dict(),
    )
    outputs = InvWarp.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.spm.preprocess import Coregister
def test_Coregister_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    paths=dict(),
    write_mask=dict(field='roptions.mask',
    ),
    write_wrap=dict(field='roptions.wrap',
    ),
    write_interp=dict(field='roptions.interp',
    ),
    use_v8struct=dict(min_ver='8',
    usedefault=True,
    ),
    cost_function=dict(field='eoptions.cost_fun',
    ),
    use_mcr=dict(),
    out_prefix=dict(field='roptions.prefix',
    usedefault=True,
    ),
    source=dict(copyfile=True,
    mandatory=True,
    field='source',
    ),
    mfile=dict(usedefault=True,
    ),
    matlab_cmd=dict(),
    tolerance=dict(field='eoptions.tol',
    ),
    separation=dict(field='eoptions.sep',
    ),
    apply_to_files=dict(copyfile=True,
    field='other',
    ),
    fwhm=dict(field='eoptions.fwhm',
    ),
    jobtype=dict(usedefault=True,
    ),
    target=dict(copyfile=False,
    mandatory=True,
    field='ref',
    ),
    )
    inputs = Coregister.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_Coregister_outputs():
    output_map = dict(coregistered_files=dict(),
    coregistered_source=dict(),
    )
    outputs = Coregister.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

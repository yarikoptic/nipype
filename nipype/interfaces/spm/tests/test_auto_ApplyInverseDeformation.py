# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.spm.utils import ApplyInverseDeformation
def test_ApplyInverseDeformation_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    paths=dict(),
    target=dict(field='comp{1}.inv.space',
    ),
    use_v8struct=dict(min_ver='8',
    usedefault=True,
    ),
    use_mcr=dict(),
    in_files=dict(field='fnames',
    mandatory=True,
    ),
    voxel_sizes=dict(field='comp{1}.inv.comp{1}.sn2def.vox',
    ),
    bounding_box=dict(field='comp{1}.inv.comp{1}.sn2def.bb',
    ),
    matlab_cmd=dict(),
    mfile=dict(usedefault=True,
    ),
    deformation_field=dict(field='comp{1}.inv.comp{1}.def',
    xor=['deformation'],
    ),
    deformation=dict(field='comp{1}.inv.comp{1}.sn2def.matname',
    xor=['deformation_field'],
    ),
    interpolation=dict(field='interp',
    ),
    )
    inputs = ApplyInverseDeformation.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_ApplyInverseDeformation_outputs():
    output_map = dict(out_files=dict(),
    )
    outputs = ApplyInverseDeformation.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

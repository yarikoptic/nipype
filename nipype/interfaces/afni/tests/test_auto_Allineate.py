# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.afni.preprocess import Allineate
def test_Allineate_inputs():
    input_map = dict(warp_type=dict(argstr='-warp %s',
    ),
    fine_blur=dict(argstr='-fineblur %f',
    ),
    weight_file=dict(argstr='-weight %s',
    ),
    reference=dict(argstr='-base %s',
    ),
    warpfreeze=dict(argstr='-warpfreeze',
    ),
    zclip=dict(argstr='-zclip',
    ),
    usetemp=dict(argstr='-usetemp',
    ),
    cost=dict(argstr='-cost %s',
    ),
    check=dict(argstr='-check %s',
    ),
    no_pad=dict(argstr='-nopad',
    ),
    replacemeth=dict(argstr='-replacemeth %s',
    ),
    replacebase=dict(argstr='-replacebase',
    ),
    in_file=dict(copyfile=False,
    mandatory=True,
    position=-1,
    argstr='-source %s',
    ),
    nwarp_fixdep=dict(argstr='-nwarp_fixdep%s',
    ),
    master=dict(argstr='-master %s',
    ),
    center_of_mass=dict(argstr='-cmass%s',
    ),
    nmatch=dict(argstr='-nmatch %d',
    ),
    final_interpolation=dict(argstr='-final %s',
    ),
    interpolation=dict(argstr='-interp %s',
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    source_mask=dict(argstr='-source_mask %s',
    ),
    one_pass=dict(argstr='-onepass',
    ),
    out_weight_file=dict(argstr='-wtprefix %s',
    ),
    automask=dict(argstr='-automask+%d',
    ),
    in_matrix=dict(position=-3,
    argstr='-1Dmatrix_apply %s',
    ),
    args=dict(argstr='%s',
    ),
    two_first=dict(argstr='-twofirst',
    ),
    out_matrix=dict(argstr='-1Dmatrix_save %s',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    source_automask=dict(argstr='-source_automask+%d',
    ),
    newgrid=dict(argstr='-newgrid %f',
    ),
    convergence=dict(argstr='-conv %f',
    ),
    autobox=dict(argstr='-autobox',
    ),
    nwarp_fixmot=dict(argstr='-nwarp_fixmot%s',
    ),
    out_file=dict(name_source='%s_allineate',
    genfile=True,
    position=-2,
    argstr='-prefix %s',
    ),
    nwarp=dict(argstr='-nwarp %s',
    ),
    autoweight=dict(argstr='-autoweight%s',
    ),
    outputtype=dict(),
    out_param_file=dict(argstr='-1Dparam_save %s',
    ),
    two_best=dict(argstr='-twobest %d',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    two_blur=dict(argstr='-twoblur',
    ),
    epi=dict(argstr='-EPI',
    ),
    in_param_file=dict(argstr='-1Dparam_apply %s',
    ),
    nomask=dict(argstr='-nomask',
    ),
    two_pass=dict(argstr='-twopass',
    ),
    )
    inputs = Allineate.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_Allineate_outputs():
    output_map = dict(out_file=dict(),
    matrix=dict(),
    )
    outputs = Allineate.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

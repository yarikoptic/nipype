# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.camino.calib import SFPICOCalibData
def test_SFPICOCalibData_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    twodtfastep=dict(units='NA',
    argstr='-twodtfastep %f',
    ),
    out_file=dict(position=-1,
    genfile=True,
    argstr='> %s',
    ),
    trace=dict(units='NA',
    argstr='-trace %f',
    ),
    args=dict(argstr='%s',
    ),
    twodtmixmax=dict(units='NA',
    argstr='-twodtmixmax %f',
    ),
    twodtmixstep=dict(units='NA',
    argstr='-twodtmixstep %f',
    ),
    twodtfarange=dict(units='NA',
    argstr='-twodtfarange %s',
    ),
    scheme_file=dict(mandatory=True,
    argstr='-schemefile %s',
    ),
    onedtfarange=dict(units='NA',
    argstr='-onedtfarange %s',
    ),
    seed=dict(units='NA',
    argstr='-seed %f',
    ),
    snr=dict(units='NA',
    argstr='-snr %f',
    ),
    onedtfastep=dict(units='NA',
    argstr='-onedtfastep %f',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    info_file=dict(hash_files=False,
    genfile=True,
    mandatory=True,
    argstr='-infooutputfile %s',
    ),
    twodtanglerange=dict(units='NA',
    argstr='-twodtanglerange %s',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    twodtanglestep=dict(units='NA',
    argstr='-twodtanglestep %f',
    ),
    )
    inputs = SFPICOCalibData.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_SFPICOCalibData_outputs():
    output_map = dict(PICOCalib=dict(),
    calib_info=dict(),
    )
    outputs = SFPICOCalibData.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

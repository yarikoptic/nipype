# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.camino.convert import FSL2Scheme
def test_FSL2Scheme_inputs():
    input_map = dict(ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    numscans=dict(units='NA',
    argstr='-numscans %d',
    ),
    args=dict(argstr='%s',
    ),
    flipz=dict(argstr='-flipz',
    ),
    usegradmod=dict(argstr='-usegradmod',
    ),
    flipx=dict(argstr='-flipx',
    ),
    flipy=dict(argstr='-flipy',
    ),
    bval_file=dict(position=2,
    mandatory=True,
    argstr='-bvalfile %s',
    ),
    diffusiontime=dict(units='NA',
    argstr='-diffusiontime %f',
    ),
    interleave=dict(argstr='-interleave',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    bvec_file=dict(position=1,
    mandatory=True,
    argstr='-bvecfile %s',
    ),
    bscale=dict(units='NA',
    argstr='-bscale %d',
    ),
    out_file=dict(position=-1,
    genfile=True,
    argstr='> %s',
    ),
    )
    inputs = FSL2Scheme.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_FSL2Scheme_outputs():
    output_map = dict(scheme=dict(),
    )
    outputs = FSL2Scheme.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

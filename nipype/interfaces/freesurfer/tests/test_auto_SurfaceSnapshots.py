# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.freesurfer.utils import SurfaceSnapshots
def test_SurfaceSnapshots_inputs():
    input_map = dict(overlay_range=dict(argstr='%s',
    ),
    show_color_scale=dict(argstr='-colscalebarflag 1',
    ),
    subjects_dir=dict(),
    surface=dict(position=3,
    mandatory=True,
    argstr='%s',
    ),
    label_name=dict(xor=['label_file'],
    argstr='-label %s',
    ),
    annot_name=dict(xor=['annot_file'],
    argstr='-annotation %s',
    ),
    invert_overlay=dict(argstr='-invphaseflag 1',
    ),
    overlay=dict(requires=['overlay_range'],
    argstr='-overlay %s',
    ),
    overlay_range_offset=dict(argstr='-foffset %.3f',
    ),
    subject_id=dict(position=1,
    mandatory=True,
    argstr='%s',
    ),
    show_curv=dict(xor=['show_gray_curv'],
    argstr='-curv',
    ),
    show_color_text=dict(argstr='-colscaletext 1',
    ),
    identity_reg=dict(xor=['overlay_reg', 'identity_reg', 'mni152_reg'],
    argstr='-overlay-reg-identity',
    ),
    label_under=dict(argstr='-labels-under',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    stem_template_args=dict(requires=['screenshot_stem'],
    ),
    screenshot_stem=dict(),
    demean_overlay=dict(argstr='-zm',
    ),
    patch_file=dict(argstr='-patch %s',
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    hemi=dict(position=2,
    mandatory=True,
    argstr='%s',
    ),
    sphere_suffix=dict(argstr='-sphere %s',
    ),
    truncate_overlay=dict(argstr='-truncphaseflag 1',
    ),
    args=dict(argstr='%s',
    ),
    orig_suffix=dict(argstr='-orig %s',
    ),
    show_gray_curv=dict(xor=['show_curv'],
    argstr='-gray',
    ),
    six_images=dict(),
    mni152_reg=dict(xor=['overlay_reg', 'identity_reg', 'mni152_reg'],
    argstr='-mni152reg',
    ),
    colortable=dict(argstr='-colortable %s',
    ),
    label_outline=dict(argstr='-label-outline',
    ),
    annot_file=dict(xor=['annot_name'],
    argstr='-annotation %s',
    ),
    reverse_overlay=dict(argstr='-revphaseflag 1',
    ),
    terminal_output=dict(mandatory=True,
    nohash=True,
    ),
    overlay_reg=dict(xor=['overlay_reg', 'identity_reg', 'mni152_reg'],
    argstr='-overlay-reg %s',
    ),
    label_file=dict(xor=['label_name'],
    argstr='-label %s',
    ),
    tcl_script=dict(argstr='%s',
    genfile=True,
    ),
    )
    inputs = SurfaceSnapshots.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value
def test_SurfaceSnapshots_outputs():
    output_map = dict(snapshots=dict(),
    )
    outputs = SurfaceSnapshots.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value
